# Set toolchain
if(CONFIG_TOOLCHAIN_PATH MATCHES ".*.cmake$" AND NOT CMAKE_TOOLCHAIN_FILE)
    message("-- CONFIG_TOOLCHAIN_PATH is cmake file: ${CONFIG_TOOLCHAIN_PATH}")
    set(CMAKE_TOOLCHAIN_FILE ${CONFIG_TOOLCHAIN_PATH})
endif()
if(CMAKE_TOOLCHAIN_FILE)
    message("-- CMAKE_TOOLCHAIN_FILE set: ${CMAKE_TOOLCHAIN_FILE}")
else()
    if(CONFIG_TOOLCHAIN_PATH OR CONFIG_TOOLCHAIN_PREFIX)
        if(CONFIG_TOOLCHAIN_PATH)
            if(WIN32)
                file(TO_CMAKE_PATH ${CONFIG_TOOLCHAIN_PATH} CONFIG_TOOLCHAIN_PATH)
            endif()
            if(NOT IS_DIRECTORY ${CONFIG_TOOLCHAIN_PATH})
                message(FATAL_ERROR "TOOLCHAIN_PATH set error:${CONFIG_TOOLCHAIN_PATH}")
            endif()
            set(path_split /)
            set(TOOLCHAIN_PATH ${CONFIG_TOOLCHAIN_PATH})
            message(STATUS "TOOLCHAIN_PATH:${CONFIG_TOOLCHAIN_PATH}")
            set(CMAKE_C_COMPILER "${CONFIG_TOOLCHAIN_PATH}${path_split}${CONFIG_TOOLCHAIN_PREFIX}gcc${EXT}")
            set(CMAKE_CXX_COMPILER "${CONFIG_TOOLCHAIN_PATH}${path_split}${CONFIG_TOOLCHAIN_PREFIX}g++${EXT}")
            set(CMAKE_ASM_COMPILER "${CONFIG_TOOLCHAIN_PATH}${path_split}${CONFIG_TOOLCHAIN_PREFIX}gcc${EXT}")
            set(CMAKE_LINKER "${CONFIG_TOOLCHAIN_PATH}${path_split}${CONFIG_TOOLCHAIN_PREFIX}ld${EXT}")
        else()
            message(STATUS "No TOOLCHAIN_PATH, only set TOOLCHAIN_PREFIX: ${CONFIG_TOOLCHAIN_PREFIX}")
            set(CMAKE_C_COMPILER "${CONFIG_TOOLCHAIN_PREFIX}gcc${EXT}")
            set(CMAKE_CXX_COMPILER "${CONFIG_TOOLCHAIN_PREFIX}g++${EXT}")
            set(CMAKE_ASM_COMPILER "${CONFIG_TOOLCHAIN_PREFIX}gcc${EXT}")
            set(CMAKE_LINKER "${CONFIG_TOOLCHAIN_PREFIX}ld${EXT}")
        endif()
    else()
        message(STATUS "use default toolchain: gcc")
        set(CMAKE_C_COMPILER "gcc${EXT}")
        set(CMAKE_CXX_COMPILER "g++${EXT}")
        set(CMAKE_ASM_COMPILER "gcc${EXT}")
        set(CMAKE_LINKER  "ld${EXT}")
    endif()
endif()
set(CMAKE_C_COMPILER_WORKS 1)
set(CMAKE_CXX_COMPILER_WORKS 1)

# For cross compiling
if(CONFIG_SYSTEM_PROCESSOR)
    message(STATUS "SYSTEM_PROCESSOR:${CONFIG_SYSTEM_PROCESSOR}")
    set(CMAKE_SYSTEM_PROCESSOR ${CONFIG_SYSTEM_PROCESSOR}) 
else()
    message(STATUS "SYSTEM_PROCESSOR Not set!!!")
endif()

if(CONFIG_SYSTEM_NAME)
    message(STATUS "SYSTEM_NAME:${CONFIG_SYSTEM_NAME}")
    set(CMAKE_SYSTEM_NAME ${CONFIG_SYSTEM_NAME})
else()
    # set(CMAKE_SYSTEM_NAME Generic) # set this flag may leads to dymamic(/shared) lib compile fail
    message(STATUS "SYSTEM_NAME Not set!!!")
endif()